@page "/addinsect"
@using InsectsPublicCyclopedia.Data
@inject InsectsDbContext DbContext
@inject HttpClient Http

<h3>Add New Insect</h3>
<EditForm Model="@insect" OnValidSubmit="HandleValidSubmit">
    <InputText @bind-Value="insect.Name" placeholder="Insect Name" />
    <InputTextArea @bind-Value="insect.Description" placeholder="Insect Description" />
    <button type="submit" class="btn btn-primary">Generate Image and Save</button>
</EditForm>

@if (generatedImage != null)
{
    <h4>Generated Image:</h4>
    <img src="@generatedImage" alt="Generated Insect Image" width="300" />
}

@code {
    [Inject] public IConfiguration Configuration { get; set; }
    
    private Insect insect = new Insect();
    private string? generatedImage;

    private async Task HandleValidSubmit()
    {
        // Generate insect image using DALLE API
        var prompt = $"Generate an image of an insect. Name: {insect.Name}. Description: {insect.Description}";

        var apiKey = Configuration["OpenAI:ApiKey"];
        var httpRequestMessage = new HttpRequestMessage
            {
                Method = HttpMethod.Post,
                RequestUri = new Uri("https://api.openai.com/v1/images/generations"),
                Headers =
            {
                { "Authorization", $"Bearer {apiKey}" },
            },
                Content = JsonContent.Create(new
                {
                    prompt = prompt,
                    n = 1,
                    size = "1024x1024" 
                })
            };

        var response = await Http.SendAsync(httpRequestMessage);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<DalleImageResponse>();
            generatedImage = result.Data[0].Url;

            // Download the image from URL and convert it to byte array
            var imageBytes = await Http.GetByteArrayAsync(generatedImage);
            insect.Image = imageBytes;

            // Save the insect to the database
            DbContext.Insects.Add(insect);
            await DbContext.SaveChangesAsync();
        }
        else
        {
            Console.WriteLine($"Error: {response.StatusCode} - {response.ReasonPhrase}");
        }
    }

    public class DalleImageResponse
    {
        public List<DalleImageData> Data { get; set; }
    }

    public class DalleImageData
    {
        public string Url { get; set; }
    }
}
